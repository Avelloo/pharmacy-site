[{"C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\index.js":"1","C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\App.js":"3","C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\data.js":"4","C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\components\\Product.js":"5","C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\components\\Rating.js":"6","C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\screens\\ProductScreen.js":"7","C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\screens\\HomeScreen.js":"8","C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\components\\MessageBox.js":"9","C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\components\\LoadingBox.js":"10","C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\store.js":"11","C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\reducers\\productReducers.js":"12","C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\constants\\productConstants.js":"13","C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\actions\\productActions.js":"14","C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\screens\\CartScreen.js":"15","C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\reducers\\cartReducers.js":"16","C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\constants\\cartConstants.js":"17","C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\actions\\cartActions.js":"18","C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\history.js":"19","C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\reducers\\userReducer.js":"20","C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\reducers\\orderReducers.js":"21","C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\actions\\userActions.js":"22","C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\screens\\OrderHistoryScreen.js":"23","C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\screens\\PaymentMethodScreen.js":"24","C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\screens\\OrderScreen.js":"25","C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\screens\\PlaceOrderScreen.js":"26","C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\screens\\ProfileScreen.js":"27","C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\screens\\RegisterScreen.js":"28","C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\screens\\SigninScreen.js":"29","C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\screens\\ShippingAdressScreen.js":"30","C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\screens\\ProductEditScreen.js":"31","C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\screens\\ProductListScreen.js":"32","C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\screens\\OrderListScreen.js":"33","C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\screens\\UserListScreen.js":"34","C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\screens\\UserEditScreen.js":"35","C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\screens\\ProviderScreen.js":"36","C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\screens\\MapScreen.js":"37","C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\screens\\SearchScreen.js":"38","C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\screens\\RegisterWorkerScreen.js":"39","C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\screens\\WorkersScreen.js":"40","C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\screens\\FormReleaseScreen.js":"41","C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\screens\\ProvidersScreen.js":"42","C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\screens\\CategoryScreen.js":"43","C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\screens\\ProvidersEditScreen.js":"44","C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\screens\\FormReleaseEditScreen.js":"45","C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\screens\\SupportScreen.js":"46","C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\screens\\CategoryEditScreen.js":"47","C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\components\\PrivateRoute.js":"48","C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\screens\\DashboardScreen.js":"49","C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\components\\AdminRoute.js":"50","C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\components\\WorkerRoute.js":"51","C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\components\\SearchBox.js":"52","C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\components\\ChatBox.js":"53","C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\components\\CartItem.js":"54","C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\constants\\orderConstants.js":"55","C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\constants\\userConstants.js":"56","C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\components\\CheckoutSteps.js":"57","C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\actions\\orderActions.js":"58","C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\utils.js":"59"},{"size":763,"mtime":1668067846000,"results":"60","hashOfConfig":"61"},{"size":362,"mtime":1668067846000,"results":"62","hashOfConfig":"61"},{"size":11163,"mtime":1668067846000,"results":"63","hashOfConfig":"61"},{"size":2745,"mtime":1650469579522,"results":"64","hashOfConfig":"65"},{"size":809,"mtime":1668067846000,"results":"66","hashOfConfig":"61"},{"size":1246,"mtime":1668067846000,"results":"67","hashOfConfig":"61"},{"size":10450,"mtime":1668067846000,"results":"68","hashOfConfig":"61"},{"size":2106,"mtime":1668067846000,"results":"69","hashOfConfig":"61"},{"size":173,"mtime":1668067846000,"results":"70","hashOfConfig":"61"},{"size":211,"mtime":1668067846000,"results":"71","hashOfConfig":"61"},{"size":3831,"mtime":1668067846000,"results":"72","hashOfConfig":"61"},{"size":11793,"mtime":1668067846000,"results":"73","hashOfConfig":"61"},{"size":6068,"mtime":1668067846000,"results":"74","hashOfConfig":"61"},{"size":14717,"mtime":1668067846000,"results":"75","hashOfConfig":"61"},{"size":2432,"mtime":1668067846000,"results":"76","hashOfConfig":"61"},{"size":1067,"mtime":1668067846000,"results":"77","hashOfConfig":"61"},{"size":332,"mtime":1668067846000,"results":"78","hashOfConfig":"61"},{"size":1166,"mtime":1668067846000,"results":"79","hashOfConfig":"61"},{"size":87,"mtime":1668067846000,"results":"80","hashOfConfig":"61"},{"size":4872,"mtime":1668067846000,"results":"81","hashOfConfig":"61"},{"size":3820,"mtime":1668067846000,"results":"82","hashOfConfig":"61"},{"size":5952,"mtime":1668067846000,"results":"83","hashOfConfig":"61"},{"size":2311,"mtime":1668067846000,"results":"84","hashOfConfig":"61"},{"size":1813,"mtime":1668067846000,"results":"85","hashOfConfig":"61"},{"size":7578,"mtime":1668067846000,"results":"86","hashOfConfig":"61"},{"size":4726,"mtime":1668067846000,"results":"87","hashOfConfig":"61"},{"size":5698,"mtime":1668067846000,"results":"88","hashOfConfig":"61"},{"size":3166,"mtime":1668067846000,"results":"89","hashOfConfig":"61"},{"size":2236,"mtime":1668067846000,"results":"90","hashOfConfig":"61"},{"size":4299,"mtime":1668067846000,"results":"91","hashOfConfig":"61"},{"size":11177,"mtime":1668067846000,"results":"92","hashOfConfig":"61"},{"size":4121,"mtime":1668067846000,"results":"93","hashOfConfig":"61"},{"size":3140,"mtime":1668067846000,"results":"94","hashOfConfig":"61"},{"size":2784,"mtime":1668067846000,"results":"95","hashOfConfig":"61"},{"size":7122,"mtime":1668067846000,"results":"96","hashOfConfig":"61"},{"size":2609,"mtime":1668067846000,"results":"97","hashOfConfig":"61"},{"size":5231,"mtime":1668067846000,"results":"98","hashOfConfig":"61"},{"size":5883,"mtime":1668067846000,"results":"99","hashOfConfig":"61"},{"size":3146,"mtime":1668067846000,"results":"100","hashOfConfig":"61"},{"size":3158,"mtime":1668067846000,"results":"101","hashOfConfig":"61"},{"size":3802,"mtime":1668067846000,"results":"102","hashOfConfig":"61"},{"size":3802,"mtime":1668067846000,"results":"103","hashOfConfig":"61"},{"size":3689,"mtime":1668067846000,"results":"104","hashOfConfig":"61"},{"size":3391,"mtime":1668067846000,"results":"105","hashOfConfig":"61"},{"size":2969,"mtime":1668067846000,"results":"106","hashOfConfig":"61"},{"size":5619,"mtime":1668067846000,"results":"107","hashOfConfig":"61"},{"size":2883,"mtime":1668067846000,"results":"108","hashOfConfig":"61"},{"size":512,"mtime":1668067846000,"results":"109","hashOfConfig":"61"},{"size":3249,"mtime":1668067846000,"results":"110","hashOfConfig":"61"},{"size":530,"mtime":1668067846000,"results":"111","hashOfConfig":"61"},{"size":532,"mtime":1668067846000,"results":"112","hashOfConfig":"61"},{"size":668,"mtime":1668067846000,"results":"113","hashOfConfig":"61"},{"size":3066,"mtime":1668067846000,"results":"114","hashOfConfig":"61"},{"size":1828,"mtime":1668067846000,"results":"115","hashOfConfig":"61"},{"size":1624,"mtime":1668067846000,"results":"116","hashOfConfig":"61"},{"size":2000,"mtime":1668067846000,"results":"117","hashOfConfig":"61"},{"size":489,"mtime":1668067846000,"results":"118","hashOfConfig":"61"},{"size":5801,"mtime":1668067846000,"results":"119","hashOfConfig":"61"},{"size":690,"mtime":1668067846000,"results":"120","hashOfConfig":"61"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"18m4szy",{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},"8ylbuc",{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143"},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147"},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166"},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","suppressedMessages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","suppressedMessages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","suppressedMessages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","suppressedMessages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","suppressedMessages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","suppressedMessages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","suppressedMessages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","suppressedMessages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","suppressedMessages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","suppressedMessages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200"},{"filePath":"201","messages":"202","suppressedMessages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","suppressedMessages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","suppressedMessages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","suppressedMessages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"213","messages":"214","suppressedMessages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"216","messages":"217","suppressedMessages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219"},{"filePath":"220","messages":"221","suppressedMessages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"223","messages":"224","suppressedMessages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226"},{"filePath":"227","messages":"228","suppressedMessages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"230","messages":"231","suppressedMessages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233"},{"filePath":"234","messages":"235","suppressedMessages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"237","messages":"238","suppressedMessages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"240","messages":"241","suppressedMessages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"243","messages":"244","suppressedMessages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246"},{"filePath":"247","messages":"248","suppressedMessages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"250","messages":"251","suppressedMessages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"253","messages":"254","suppressedMessages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"256","messages":"257","suppressedMessages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"259","messages":"260","suppressedMessages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"262","messages":"263","suppressedMessages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"265","messages":"266","suppressedMessages":"267","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268"},{"filePath":"269","messages":"270","suppressedMessages":"271","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"272","messages":"273","suppressedMessages":"274","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"275","messages":"276","suppressedMessages":"277","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"278","messages":"279","suppressedMessages":"280","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"281","messages":"282","suppressedMessages":"283","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"284","messages":"285","suppressedMessages":"286","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"287","messages":"288","suppressedMessages":"289","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290"},{"filePath":"291","messages":"292","suppressedMessages":"293","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"294","messages":"295","suppressedMessages":"296","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"297","messages":"298","suppressedMessages":"299","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"300","messages":"301","suppressedMessages":"302","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"303","messages":"304","suppressedMessages":"305","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"306","messages":"307","suppressedMessages":"308","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\index.js",[],[],"C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\reportWebVitals.js",[],[],"C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\App.js",[],[],"C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\data.js",[],[],[],"C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\components\\Product.js",[],[],"C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\components\\Rating.js",[],[],"C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\screens\\ProductScreen.js",["309","310"],[],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { createReview, detailsProducts } from \"../actions/productActions\";\nimport LoadingBox from \"../components/LoadingBox\";\nimport MessageBox from \"../components/MessageBox\";\nimport Rating from \"../components/Rating\";\nimport { PRODUCT_REVIEW_CREATE_RESET } from \"../constants/productConstants\";\n\n\nexport default function ProductScreen(props) {\n  const dispatch = useDispatch();\n  const productId = props.match.params.id;\n  const [qty, setQty] = useState(1);\n  const productDetails = useSelector((state) => state.productDetails);\n  const { loading, error, product } = productDetails;\n  const userSignin = useSelector((state) => state.userSignin);\n  const { userInfo } = userSignin;\n\n  const productReviewCreate = useSelector((state) => state.productReviewCreate);\n  const {\n    loading: loadingReviewCreate,\n    error: errorReviewCreate,\n    success: successReviewCreate,\n  } = productReviewCreate;\n\n  const [rating, setRating] = useState(0);\n  const [comment, setComment] = useState(\"\");\n  const [userPrescript, setUserPrescript] = useState(\"\");\n\n  useEffect(() => {\n    if (successReviewCreate) {\n      window.alert(\"Отзыв опубликован\");\n      setRating(\"\");\n      setComment(\"\");\n      dispatch({ type: PRODUCT_REVIEW_CREATE_RESET });\n    }\n    dispatch(detailsProducts(productId));\n  }, [dispatch, productId, successReviewCreate]);\n\n  const addToCartHandler = () => {\n    if(product.isPrescripted){\n      if(userPrescript == product.prescript){\n        props.history.push(`/cart/${productId}?qty=${qty}`);\n      }else{\n        if(userPrescript == ''){\n          alert(\"Введите хеш рецепта!\");\n        }else{\n          alert(\"Хеш рецепта не подходит!\");\n        }\n       \n      }\n    }else{\n      props.history.push(`/cart/${productId}?qty=${qty}`);\n    }\n\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    if (comment && rating) {\n      dispatch(\n        createReview(productId, { rating, comment, name: userInfo.name })\n      );\n    } else {\n      alert(\"Пожалуйста введите отзыв и поставьте рейтинг.\");\n    }\n  };\n\n\n  return (\n    <>\n      {loading ? (\n        <LoadingBox></LoadingBox>\n      ) : (\n        <div className=\"productHeader\">\n          <h1 className=\"productTitle\">{product.name}</h1>\n          <div className=\"\">\n            <Rating\n              rating={product.rating}\n              numReviews={product.numReviews}\n            ></Rating>\n          </div>\n        </div>\n      )}\n      {loading ? (\n        <LoadingBox></LoadingBox>\n      ) : error ? (\n        <MessageBox variant=\"danger\">{error}</MessageBox>\n      ) : (\n        <>\n          <div className=\"row-top-product\">\n            <div className=\"productBlock shadow\">\n              <img\n                className=\"img-product\"\n                src={product.image}\n                alt={product.name}\n              ></img>\n              <div className=\"card-product card-body\" style={{boxShadow:'0px 0px 0px 0px', border:'0px'}}>\n                <div>\n                  Поставщик\n                  <h2>\n                    <Link to={`/provider/${product.provider._id}`}>\n                    {product.provider}\n                    </Link>\n                  </h2>\n                </div>\n                <div>\n                  <div className=\"row\">\n                    <div>Цена:</div>\n                    <div className=\"price\">{product.price} Руб.</div>\n                  </div>\n                </div>\n                <div>\n                  <div className=\"row\" style={{margin:'1rem 0'}}>\n                    <div>Статус:</div>\n                    <div>\n                      {product.countInStock > 0 ? (\n                        <span className=\"success\" style={{marginLeft: '1rem'}}>Есть в наличии</span>\n                      ) : (\n                        <span className=\"danger\"  style={{marginLeft: '1rem'}} >Товар отсутствует</span>\n                      )}\n                    </div>\n                  </div>\n                </div>\n                <div>\n                  <div className=\"row\" style={{margin:'1rem 0'}}>\n                    <div>Рецепт:</div>\n                    <div>\n                      {product.isPrescripted? (\n                        <span className=\"danger\"  style={{marginLeft: '1rem'}} >Требуется рецепт</span>\n                      ) : (\n                        <span className=\"success\" style={{marginLeft: '1rem'}}>Рецепт не нужен</span>\n                      )}\n                    </div>\n                  </div>\n                </div>\n                {product.isPrescripted? (\n                  <div className=\"\" style={{margin:'2rem 0', borderRadius:'1rem'}}>\n                   <p style={{margin:'2rem 0', padding:'0,5rem'}}>Это рецептурный препарат. Перед добавлением его в корзину введите хеш рецепта ниже:</p>\n                   <input onChange={e => setUserPrescript(e.target.value)} className=\"shadow\" style={{width:'210px', backgroundColor:'#b5ccff', borderRadius:'0 0 1rem 1rem'}}></input>\n                 </div>\n                ) : (\n                 ''\n                )}\n                 \n                {product.countInStock > 0 && (\n                  <>\n                    <div className=\"qtySelector\">\n                      <div>Кол-во:</div>\n                      <select\n                        value={qty}\n                        onChange={(e) => setQty(e.target.value)}\n                      >\n                        {[...Array(product.countInStock).keys()].map((x) => (\n                          <option key={x + 1} value={x + 1}>\n                            {x + 1}\n                          </option>\n                        ))}\n                      </select>\n                    </div>\n\n                    <button\n                      style={{ margin: \"o auto\" }}\n                      onClick={addToCartHandler}\n                      className=\"primary block\"\n                    >\n                      В корзину\n                    </button>\n                  </>\n                )}\n              </div>\n            </div>\n\n            <div className=\"description_list_container\">\n              <div className=\"description_list\">\n                <div>\n                  <div\n                    className=\"product-description\"\n                    dangerouslySetInnerHTML={{\n                      __html: product.description,\n                    }}\n                  ></div>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"reviewsSection\">\n              {loading ? (\n                <LoadingBox></LoadingBox>\n              ) : error ? (\n                <MessageBox variant=\"danger\">{error}</MessageBox>\n              ) : (\n                <div className=\" reviewsBlock shadow\" style={{height:'100%'}}>\n                  <h2 id=\"reviews\">Отзывы</h2>\n                  {product.reviews.length === 0 && (\n                    <MessageBox>\n                      Ещё никто не оставил отзыв. Будьте первыми!\n                    </MessageBox>\n                  )}\n                  <ul>\n                    {product.reviews.map((review) => (\n                      <li key={review._id} className='' style={{padding:'1rem', margon:'1rem 0', backgroundColor:'rgba(69, 123, 157, 0.06)', borderRadius:'1rem'}}>\n                        <strong>{review.name}</strong>\n                        <Rating rating={review.rating} caption=\" \"></Rating>\n                        <p>{review.createdAt.substring(0, 10)}</p>\n                        <p>{review.comment}</p>\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n              )}\n\n              <div className=\" leaveReview shadow\">\n                {userInfo ? (\n                  <form className=\"form\" onSubmit={submitHandler}>\n                    <div>\n                      <h2>Оставить отзыв:</h2>\n                    </div>\n                    <div>\n                      <label htmlFor=\"rating\">Рейтинг</label>\n                      <select\n                        id=\"rating\"\n                        value={rating}\n                        onChange={(e) => setRating(e.target.value)}\n                      >\n                        <option value=\"\">Выберите...</option>\n                        <option value=\"1\">1- Ужасно</option>\n                        <option value=\"2\">2- Плохо</option>\n                        <option value=\"3\">3- Хорошо</option>\n                        <option value=\"4\">4- Очень хорошо</option>\n                        <option value=\"5\">5- Отлично</option>\n                      </select>\n                    </div>\n                    <div>\n                      <label htmlFor=\"comment\">Отзыв</label>\n                      <textarea\n                        id=\"comment\"\n                        value={comment}\n                        onChange={(e) => setComment(e.target.value)}\n                      ></textarea>\n                    </div>\n                    <div>\n                      <label />\n                      <button\n                        className=\"primary\"\n                        type=\"submit\"\n                        style={{ width: \"100%\" }}\n                      >\n                        Отправить\n                      </button>\n                    </div>\n                    <div>\n                      {loadingReviewCreate && <LoadingBox></LoadingBox>}\n                      {errorReviewCreate && (\n                        <MessageBox variant=\"danger\">\n                          {errorReviewCreate}\n                        </MessageBox>\n                      )}\n                    </div>\n                  </form>\n                ) : (\n                  <MessageBox>\n                    Пожалуйста <Link to=\"/signin\">войдите в аккаунт</Link>,\n                    чтобы оставить отзыв.\n                  </MessageBox>\n                )}\n              </div>\n            </div>\n          </div>\n        </>\n      )}\n    </>\n  );\n}\n","C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\screens\\HomeScreen.js",["311","312","313","314","315"],[],"import React, { useEffect } from \"react\";\n\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\nimport { Carousel } from \"react-responsive-carousel\";\nimport Product from \"../components/Product\";\nimport LoadingBox from \"../components/LoadingBox\";\nimport MessageBox from \"../components/MessageBox\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { listProducts } from \"../actions/productActions\";\nimport { listTopProviders } from \"../actions/userActions\";\nimport { Link } from \"react-router-dom\";\n\nexport default function HomeScreen() {\n  const dispatch = useDispatch();\n  const productList = useSelector((state) => state.productList);\n  const { loading, error, products } = productList;\n\n  \n\n  useEffect(() => {\n    dispatch(listProducts({}));\n    \n  }, [dispatch]);\n  return (\n    <div>\n        <>\n          <Carousel  showArrows autoPlay showThumbs={false}>\n            {\n              <img\n                src={`https://pharmedu.ru/wp-content/uploads/2017/09/%D1%82%D0%B0%D0%B1%D0%BB%D0%B5%D1%82%D0%BA%D0%B8.jpg`}\n              />\n            }\n            {\n              <img\n                src={`https://images.unsplash.com/photo-1628771065518-0d82f1938462?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxzZWFyY2h8Mnx8cGlsbHN8ZW58MHx8MHx8&w=1000&q=80`}\n              />\n            }\n            {\n              <img\n                src={`https://static01.nyt.com/images/2021/06/17/us/17virus-briefing-antiviral/17virus-briefing-antiviral-videoSixteenByNine3000.jpg`}\n              />\n            }\n          \n          </Carousel>\n        </>\n      \n      <h2>В продаже:</h2>\n      {loading ? (\n        <LoadingBox></LoadingBox>\n      ) : error ? (\n        <MessageBox variant=\"danger\">{error}</MessageBox>\n      ) : (\n        <>\n          {products.length === 0 && (\n            <MessageBox>Продукты не найдены</MessageBox>\n          )}\n          <div className=\"row center\">\n            {products.map((product) => (\n              <Product key={product._id} product={product}></Product>\n            ))}\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n","C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\components\\MessageBox.js",[],[],"C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\components\\LoadingBox.js",[],[],"C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\store.js",[],[],"C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\reducers\\productReducers.js",[],[],"C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\constants\\productConstants.js",[],[],"C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\actions\\productActions.js",["316","317","318","319"],[],"import Axios from \"axios\";\nimport {\n  PRODUCT_CREATE_FAIL,\n  PRODUCT_CREATE_REQUEST,\n  PRODUCT_CREATE_SUCCESS,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_DETAILS_FAIL,\n  PRODUCT_LIST_FAIL,\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_SUCCESS,\n  PRODUCT_UPDATE_REQUEST,\n  PRODUCT_UPDATE_SUCCESS,\n  PRODUCT_UPDATE_FAIL,\n  PRODUCT_DELETE_REQUEST,\n  PRODUCT_DELETE_FAIL,\n  PRODUCT_DELETE_SUCCESS,\n  PRODUCT_CATEGORY_LIST_SUCCESS,\n  PRODUCT_CATEGORY_LIST_REQUEST,\n  PRODUCT_CATEGORY_LIST_FAIL,\n  PRODUCT_REVIEW_CREATE_REQUEST,\n  PRODUCT_REVIEW_CREATE_SUCCESS,\n  PRODUCT_REVIEW_CREATE_FAIL,\n  PRODUCT_FORMRELEASE_LIST_REQUEST,\n  PRODUCT_FORMRELEASE_LIST_SUCCESS,\n  PRODUCT_FORMRELEASE_LIST_FAIL,\n  PRODUCT_PROVIDER_LIST_REQUEST,\n  PRODUCT_PROVIDER_LIST_SUCCESS,\n  PRODUCT_PROVIDER_LIST_FAIL,\n  PRODUCT_PROVIDER_DELETE_REQUEST,\n  PRODUCT_PROVIDER_DELETE_FAIL,\n  PRODUCT_PROVIDER_DELETE_SUCCESS,\n  PRODUCT_FORMRELEASE_DELETE_REQUEST,\n  PRODUCT_FORMRELEASE_DELETE_SUCCESS,\n  PRODUCT_FORMRELEASE_DELETE_FAIL,\n  PRODUCT_CATEGORY_DELETE_REQUEST,\n  PRODUCT_CATEGORY_DELETE_SUCCESS,\n  PRODUCT_CATEGORY_DELETE_FAIL,\n  PRODUCT_PROVIDER_UPDATE_REQUEST,\n  PRODUCT_PROVIDER_UPDATE_SUCCESS,\n  PRODUCT_PROVIDER_UPDATE_FAIL,\n  PRODUCT_FORMRELEASE_UPDATE_REQUEST,\n  PRODUCT_FORMRELEASE_UPDATE_SUCCESS,\n  PRODUCT_FORMRELEASE_UPDATE_FAIL,\n  PRODUCT_CATEGORY_UPDATE_REQUEST,\n  PRODUCT_CATEGORY_UPDATE_SUCCESS,\n  PRODUCT_CATEGORY_UPDATE_FAIL,\n  PRODUCT_PROVIDER_DETAILS_REQUEST,\n  PRODUCT_PROVIDER_DETAILS_SUCCESS,\n  PRODUCT_PROVIDER_DETAILS_FAIL,\n  PRODUCT_FORMRELEASE_DETAILS_REQUEST,\n  PRODUCT_FORMRELEASE_DETAILS_SUCCESS,\n  PRODUCT_FORMRELEASE_DETAILS_FAIL,\n  PRODUCT_CATEGORY_DETAILS_REQUEST,\n  PRODUCT_CATEGORY_DETAILS_SUCCESS,\n  PRODUCT_CATEGORY_DETAILS_FAIL,\n  PRODUCT_PROVIDER_CREATE_REQUEST,\n  PRODUCT_PROVIDER_CREATE_SUCCESS,\n  PRODUCT_PROVIDER_CREATE_FAIL,\n  PRODUCT_FORMRELEASE_CREATE_REQUEST,\n  PRODUCT_FORMRELEASE_CREATE_SUCCESS,\n  PRODUCT_FORMRELEASE_CREATE_FAIL,\n  PRODUCT_CATEGORY_CREATE_REQUEST,\n  PRODUCT_CATEGORY_CREATE_SUCCESS,\n  PRODUCT_CATEGORY_CREATE_FAIL,\n} from \"../constants/productConstants\";\n\nexport const listProducts = ({\n  seller = '',\n  name = '',\n  category = '',\n  order = '',\n  min = 0,\n  max = 0,\n  rating = 0,\n}) => async (dispatch) => {\n    dispatch({\n      type: PRODUCT_LIST_REQUEST,\n    });\n    try {\n      const { data } = await Axios.get(\n        `/api/products?seller=${seller}&name=${name}&category=${category}&min=${min}&max=${max}&rating=${rating}&order=${order}`\n      );\n      dispatch({ type: PRODUCT_LIST_SUCCESS, payload: data });\n    } catch (error) {\n      dispatch({ type: PRODUCT_LIST_FAIL, payload: error.message });\n    }\n  };\n\n  export const listProductCategories = () => async (dispatch) => {\n    dispatch({\n      type: PRODUCT_CATEGORY_LIST_REQUEST,\n    });\n    try {\n      const { data } = await Axios.get(`/api/category`);\n      console.log(data);\n      dispatch({ type: PRODUCT_CATEGORY_LIST_SUCCESS, payload: data });\n    } catch (error) {\n      dispatch({ type: PRODUCT_CATEGORY_LIST_FAIL, payload: error.message });\n    }\n  };\n  export const listProductFormRelease = () => async (dispatch) => {\n    dispatch({\n      type: PRODUCT_FORMRELEASE_LIST_REQUEST,\n    });\n    try {\n      const { data } = await Axios.get(`/api/formRelease`);\n      console.log(data);\n      dispatch({ type: PRODUCT_FORMRELEASE_LIST_SUCCESS, payload: data });\n    } catch (error) {\n      dispatch({ type: PRODUCT_FORMRELEASE_LIST_FAIL, payload: error.message });\n    }\n  };\n  export const listProductProviders = () => async (dispatch) => {\n    dispatch({\n      type: PRODUCT_PROVIDER_LIST_REQUEST,\n    });\n    try {\n      const { data } = await Axios.get(`/api/provider`);\n      console.log(data);\n      dispatch({ type: PRODUCT_PROVIDER_LIST_SUCCESS, payload: data });\n    } catch (error) {\n      dispatch({ type: PRODUCT_PROVIDER_LIST_FAIL, payload: error.message });\n    }\n  };\n  \n  \n\nexport const detailsProducts = (productId) => async (dispatch) => {\n  dispatch({ type: PRODUCT_DETAILS_REQUEST, payload: productId });\n  try {\n    const { data } = await Axios.get(`/api/products/${productId}`);\n    dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const createProduct = () => async (dispatch, getState) => {\n  dispatch({ type: PRODUCT_CREATE_REQUEST });\n  const {\n    userSignin: { userInfo },\n  } = getState();\n  try {\n    const { data } = await Axios.post(\n      \"/api/products\",\n      {},\n      {\n        headers: { Authorization: `Bearer ${userInfo.token}` },\n      }\n    );\n    dispatch({\n      type: PRODUCT_CREATE_SUCCESS,\n      payload: data.product,\n    });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: PRODUCT_CREATE_FAIL, payload: message });\n  }\n};\n\nexport const updateProduct = (product) => async (dispatch, getState) => {\n  dispatch({ type: PRODUCT_UPDATE_REQUEST, payload: product });\n  const {\n    userSignin: { userInfo },\n  } = getState();\n  try {\n    const { data } = await Axios.put(`/api/products/${product._id}`, product, {\n      headers: { Authorization: `Bearer ${userInfo.token}` },\n    });\n    dispatch({ type: PRODUCT_UPDATE_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: PRODUCT_UPDATE_FAIL, error: message });\n  }\n};\n\nexport const deleteProduct = (productId) => async (dispatch, getState) => {\n  dispatch({ type: PRODUCT_DELETE_REQUEST, payload: productId });\n  const {\n    userSignin: { userInfo },\n  } = getState();\n  try {\n    const { data } = Axios.delete(`/api/products/${productId}`, {\n      headers: { Authorization: `Bearer ${userInfo.token}` },\n    });\n    dispatch({ type: PRODUCT_DELETE_SUCCESS });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: PRODUCT_DELETE_FAIL, payload: message });\n  }\n};\n\nexport const deleteProvider = (providerId) => async (dispatch, getState) => {\n  dispatch({ type: PRODUCT_PROVIDER_DELETE_REQUEST, payload: providerId });\n  const {\n    userSignin: { userInfo },\n  } = getState();\n  try {\n    const { data } = Axios.delete(`/api/provider/${providerId}`, {\n      headers: { Authorization: `Bearer ${userInfo.token}` },\n    });\n    dispatch({ type: PRODUCT_PROVIDER_DELETE_SUCCESS });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: PRODUCT_PROVIDER_DELETE_FAIL, payload: message });\n  }\n};\nexport const createProvider = () => async (dispatch, getState) => {\n  dispatch({ type: PRODUCT_PROVIDER_CREATE_REQUEST});\n  const {\n    userSignin: { userInfo },\n  } = getState();\n  try {\n    const { data } = await Axios.post(\n      \"/api/provider\",\n      {},\n      {\n        headers: { Authorization: `Bearer ${userInfo.token}` },\n      }\n    );\n    dispatch({\n      type: PRODUCT_PROVIDER_CREATE_SUCCESS,\n      payload: data.provider,\n    });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: PRODUCT_PROVIDER_CREATE_FAIL, payload: message });\n  }\n};\nexport const updateProvider = (provider) => async (dispatch, getState) => {\n  dispatch({ type: PRODUCT_PROVIDER_UPDATE_REQUEST, payload: provider });\n  const {\n    userSignin: { userInfo },\n  } = getState();\n  try {\n    const { data } = await Axios.put(`/api/provider/${provider._id}`, provider, {\n      headers: { Authorization: `Bearer ${userInfo.token}` },\n    });\n    dispatch({ type: PRODUCT_PROVIDER_UPDATE_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: PRODUCT_PROVIDER_UPDATE_FAIL, error: message });\n  }\n};\n\nexport const detailsProvider = (providerId) => async (dispatch) => {\n  dispatch({ type: PRODUCT_PROVIDER_DETAILS_REQUEST, payload: providerId });\n  try {\n    const { data } = await Axios.get(`/api/provider/${providerId}`);\n    dispatch({ type: PRODUCT_PROVIDER_DETAILS_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_PROVIDER_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const deleteFormRelease = (formReleaseId) => async (dispatch, getState) => {\n  dispatch({ type: PRODUCT_FORMRELEASE_DELETE_REQUEST, payload: formReleaseId });\n  const {\n    userSignin: { userInfo },\n  } = getState();\n  try {\n    const { data } = Axios.delete(`/api/formRelease/${formReleaseId}`, {\n      headers: { Authorization: `Bearer ${userInfo.token}` },\n    });\n    dispatch({ type: PRODUCT_FORMRELEASE_DELETE_SUCCESS });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: PRODUCT_FORMRELEASE_DELETE_FAIL, payload: message });\n  }\n};\nexport const createFormRelease = () => async (dispatch, getState) => {\n  dispatch({ type: PRODUCT_FORMRELEASE_CREATE_REQUEST});\n  const {\n    userSignin: { userInfo },\n  } = getState();\n  try {\n    const { data } = await Axios.post(\n      \"/api/formRelease\",\n      {},\n      {\n        headers: { Authorization: `Bearer ${userInfo.token}` },\n      }\n    );\n    dispatch({\n      type: PRODUCT_FORMRELEASE_CREATE_SUCCESS,\n      payload: data.formRelease,\n    });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: PRODUCT_FORMRELEASE_CREATE_FAIL, payload: message });\n  }\n};\nexport const detailsFormRelease = (formReleaseId) => async (dispatch) => {\n  dispatch({ type: PRODUCT_FORMRELEASE_DETAILS_REQUEST, payload: formReleaseId });\n  try {\n    const { data } = await Axios.get(`/api/formRelease/${formReleaseId}`);\n    dispatch({ type: PRODUCT_FORMRELEASE_DETAILS_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_FORMRELEASE_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const updateFormRelease = (formRelease) => async (dispatch, getState) => {\n  dispatch({ type: PRODUCT_FORMRELEASE_UPDATE_REQUEST, payload: formRelease });\n  const {\n    userSignin: { userInfo },\n  } = getState();\n  try {\n    const { data } = await Axios.put(`/api/formRelease/${formRelease._id}`, formRelease, {\n      headers: { Authorization: `Bearer ${userInfo.token}` },\n    });\n    dispatch({ type: PRODUCT_FORMRELEASE_UPDATE_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: PRODUCT_FORMRELEASE_UPDATE_FAIL, error: message });\n  }\n};\n\nexport const deleteCategory = (categoryId) => async (dispatch, getState) => {\n  dispatch({ type: PRODUCT_CATEGORY_DELETE_REQUEST, payload: categoryId });\n  const {\n    userSignin: { userInfo },\n  } = getState();\n  try {\n    const { data } = Axios.delete(`/api/category/${categoryId}`, {\n      headers: { Authorization: `Bearer ${userInfo.token}` },\n    });\n    dispatch({ type: PRODUCT_CATEGORY_DELETE_SUCCESS });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: PRODUCT_CATEGORY_DELETE_FAIL, payload: message });\n  }\n};\n\nexport const createCategory = () => async (dispatch, getState) => {\n  dispatch({ type: PRODUCT_CATEGORY_CREATE_REQUEST});\n  const {\n    userSignin: { userInfo },\n  } = getState();\n  try {\n    const { data } = await Axios.post(\n      \"/api/category\",\n      {},\n      {\n        headers: { Authorization: `Bearer ${userInfo.token}` },\n      }\n    );\n    dispatch({\n      type: PRODUCT_CATEGORY_CREATE_SUCCESS,\n      payload: data.category,\n    });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: PRODUCT_CATEGORY_CREATE_FAIL, payload: message });\n  }\n};\n\nexport const detailsCategory = (categoryId) => async (dispatch) => {\n  dispatch({ type: PRODUCT_CATEGORY_DETAILS_REQUEST, payload: categoryId });\n  try {\n    const { data } = await Axios.get(`/api/category/${categoryId}`);\n    dispatch({ type: PRODUCT_CATEGORY_DETAILS_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_CATEGORY_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const updateCategory = (category) => async (dispatch, getState) => {\n  dispatch({ type: PRODUCT_CATEGORY_UPDATE_REQUEST, payload: category });\n  const {\n    userSignin: { userInfo },\n  } = getState();\n  try {\n    const { data } = await Axios.put(`/api/category/${category._id}`, category, {\n      headers: { Authorization: `Bearer ${userInfo.token}` },\n    });\n    dispatch({ type: PRODUCT_CATEGORY_UPDATE_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: PRODUCT_CATEGORY_UPDATE_FAIL, error: message });\n  }\n};\n\nexport const createReview = (productId, review) => async (\n  dispatch,\n  getState\n) => {\n  dispatch({ type: PRODUCT_REVIEW_CREATE_REQUEST });\n  const {\n    userSignin: { userInfo },\n  } = getState();\n  try {\n    const { data } = await Axios.post(\n      `/api/products/${productId}/reviews`,\n      review,\n      {\n        headers: { Authorization: `Bearer ${userInfo.token}` },\n      }\n    );\n    dispatch({\n      type: PRODUCT_REVIEW_CREATE_SUCCESS,\n      payload: data.review,\n    });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: PRODUCT_REVIEW_CREATE_FAIL, payload: message });\n  }\n};\n","C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\screens\\CartScreen.js",[],[],"C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\reducers\\cartReducers.js",[],[],"C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\constants\\cartConstants.js",[],[],"C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\actions\\cartActions.js",[],[],"C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\history.js",[],[],"C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\reducers\\userReducer.js",[],[],"C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\reducers\\orderReducers.js",[],[],"C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\actions\\userActions.js",[],[],"C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\screens\\OrderHistoryScreen.js",[],[],"C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\screens\\PaymentMethodScreen.js",[],[],"C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\screens\\OrderScreen.js",["320"],[],"import Axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { deliverOrder, detailsOrder, payOrder } from '../actions/orderActions';\nimport LoadingBox from \"../components/LoadingBox\";\nimport MessageBox from \"../components/MessageBox\";\nimport { PayPalButton } from \"react-paypal-button-v2\";\nimport {\n  ORDER_DELIVER_RESET,\n  ORDER_PAY_RESET,\n} from '../constants/orderConstants';\nimport Moment from 'moment';\nimport 'moment/locale/ru';\n\nexport default function OrderScreen(props) {\n  const orderId = props.match.params.id;\n  const [sdkReady, setSdkReady] = useState(false);\n  const orderDetails = useSelector((state) => state.orderDetails);\n  const { order, loading, error } = orderDetails;\n  const userSignin = useSelector((state) => state.userSignin);\n  const { userInfo } = userSignin;\n\n  const moment = Moment;\n  moment.locale(\"ru\");\n  const orderPay = useSelector((state) => state.orderPay);\n  const {\n    loading: loadingPay,\n    error: errorPay,\n    success: successPay,\n  } = orderPay;\n\n  const orderDeliver = useSelector((state) => state.orderDeliver);\n  const {\n    loading: loadingDeliver,\n    error: errorDeliver,\n    success: successDeliver,\n  } = orderDeliver;\n\n  const toPrice = (num) => Number(num.toFixed(2)); // 5.123 => \"5.12\" => 5.12\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const addPayPalScript = async () => {\n      const { data } = await Axios.get(\"/api/config/paypal\");\n      const script = document.createElement(\"script\");\n      script.type = \"text/javascript\";\n      script.src = `https://www.paypal.com/sdk/js?client-id=${data}`;\n      script.async = true;\n      script.onload = () => {\n        setSdkReady(true);\n      };\n      document.body.appendChild(script);\n    };\n    if (\n      !order ||\n      successPay ||\n      successDeliver ||\n      (order && order._id !== orderId)\n    ) {\n      dispatch({ type: ORDER_PAY_RESET });\n      dispatch({ type: ORDER_DELIVER_RESET });\n      dispatch(detailsOrder(orderId));\n    } else {\n      if (!order.isPaid) {\n        if (!window.paypal) {\n          addPayPalScript();\n        } else {\n          setSdkReady(true);\n        }\n      }\n    }\n  }, [dispatch, order, orderId, sdkReady, successPay, successDeliver]);\n\n\n  const successPaymentHandler = (paymentResult) => {\n    dispatch(payOrder(order, paymentResult));\n  };\n\n  const deliverHandler = () => {\n    dispatch(deliverOrder(order._id));\n  };\n\n  return loading ? (\n    <LoadingBox></LoadingBox>\n  ) : error ? (\n    <MessageBox variant=\"danger\">{error}</MessageBox>\n  ) : (\n    <div>\n      <h1>Заказ {order._id}</h1>\n      <div className=\"rowPay top center\">\n        <div className=\"col-2\">\n          <ul>\n            <li>\n              <div className=\"card card-body\">\n                <h2>Доставка</h2>\n                <p>\n                  <strong>ФИО:</strong>\n                  <br /> {order.shippingAdress.fullName} <br />\n                  <strong>Адрес:</strong>\n                  <br /> {order.shippingAdress.adress},<br />\n                  {order.shippingAdress.city},<br />{\" \"}\n                  {order.shippingAdress.postalCode}\n                  <br />\n                  <strong>Номер телефона:</strong>\n                  <br /> +{order.shippingAdress.phoneNumber}\n                </p>\n                <strong>Статус доставки:</strong>\n                {order.isDelivered ? (\n                  <MessageBox variant=\"success\">\n                    Доставлено {moment(order.deliveredAt).format('lll')}\n                  </MessageBox>\n                ) : (\n                  <MessageBox variant=\"danger\">Ещё не доставлено</MessageBox>\n                )}\n              </div>\n            </li>\n            <li>\n              <div className=\"card card-body\">\n                <h2>Метод оплаты</h2>\n                <p>\n                  <strong>Метод:</strong>\n                  {order.paymentMethod}\n                </p>\n                <strong>Статус оплаты:</strong>\n                {order.isPaid ? (\n                  <MessageBox variant=\"success\">\n                    Оплачено {moment(order.paidAt).format('lll')}\n                  </MessageBox>\n                ) : (\n                  <MessageBox variant=\"danger\">Ещё не оплачено</MessageBox>\n                )}\n              </div>\n            </li>\n          </ul>\n        </div>\n       \n          <div className=\"card card-body card-payment\">\n            <h2 className=\"h2block\">Корзина:</h2>\n            <ul>\n              {order.orderItems.map((item) => (\n                <li key={item.product}>\n                  <div className=\"row row-left\">\n                    <img\n                      src={item.image}\n                      alt={item.name}\n                      className=\"small\"\n                    ></img>\n\n                    <div className=\"min-30\">\n                      <Link to={`/product/${item.product}`}>{item.name}</Link>\n                    </div>\n                    <div>\n                      {item.qty} x {item.price} = {item.qty * item.price} Руб.\n                    </div>\n                  </div>\n                </li>\n              ))}\n            </ul>\n          </div>\n        \n        \n          <div className=\"card card-body\">\n            <ul>\n              <li>\n                <h2>Сумма:</h2>\n              </li>\n              <li>\n                <div className=\"row\">\n                  <div>Товары</div>\n                  <div>{order.itemsPrice} Руб.</div>\n                </div>\n              </li>\n              <li>\n                <div className=\"row\">\n                  <div>Доставка</div>\n                  <div>{order.shippingPrice} Руб.</div>\n                </div>\n              </li>\n              <li>\n                <div className=\"row\">\n                  <div>\n                    <strong>Итого:</strong>\n                  </div>\n                  <div>\n                    <strong>{order.totalPrice} Руб.</strong>\n                  </div>\n                </div>\n              </li>\n              {!order.isPaid && (\n                <li>\n                  {!sdkReady ? (\n                    <LoadingBox></LoadingBox>\n                  ) : (\n                    <>\n                      {errorPay && (\n                        <MessageBox variant=\"danger\">{errorPay}</MessageBox>\n                      )}\n                      {loadingPay && <LoadingBox></LoadingBox>}\n                      <PayPalButton\n                        amount={order.totalPrice}\n                        onSuccess={successPaymentHandler}\n                      ></PayPalButton>\n                    </>\n                  )}\n                </li>\n              )}\n              {(userInfo.isAdmin || userInfo.isWorker) && order.isPaid && !order.isDelivered && (\n                <li>\n                  {loadingDeliver && <LoadingBox></LoadingBox>}\n                  {errorDeliver && (\n                    <MessageBox variant=\"danger\">{errorDeliver}</MessageBox>\n                  )}\n                  <button\n                    type=\"button\"\n                    className=\"medium\"\n                    onClick={deliverHandler}\n                  >\n                    Отметить заказ доставленным\n                  </button>\n                </li>\n              )}\n            </ul>\n          </div>\n        \n      </div>\n    </div>\n  );\n}\n","C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\screens\\PlaceOrderScreen.js",[],[],"C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\screens\\ProfileScreen.js",[],[],"C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\screens\\RegisterScreen.js",[],[],"C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\screens\\SigninScreen.js",[],[],"C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\screens\\ShippingAdressScreen.js",[],[],"C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\screens\\ProductEditScreen.js",["321","322","323"],[],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  detailsProducts,\n  listProductCategories,\n  listProductFormRelease,\n  listProductProviders,\n  updateProduct,\n} from \"../actions/productActions\";\nimport LoadingBox from \"../components/LoadingBox\";\nimport MessageBox from \"../components/MessageBox\";\nimport { PRODUCT_UPDATE_RESET } from \"../constants/productConstants\";\nimport Axios from \"axios\";\n\nexport default function ProductEditScreen(props) {\n  const productId = props.match.params.id;\n  const [name, setName] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [countInStock, setCountInStock] = useState(\"\");\n  const [provider, setProvider] = useState(\"\");\n  const [formRelease, setFormRelease] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [isPrescripted, setIsPrescripted] = useState(\"\");\n  const [prescript, setPrescript] = useState(\"\");\n  const [prescriptVision, setPrescriptVision] = useState(\"\");\n\n  const productDetails = useSelector((state) => state.productDetails);\n  const { loading, error, product } = productDetails;\n  const productUpdate = useSelector((state) => state.productUpdate);\n  const productCategoryList = useSelector((state) => state.productCategoryList);\n  const productFormReleaseList = useSelector(\n    (state) => state.productFormReleaseList\n  );\n  const productProviderList = useSelector((state) => state.productProviderList);\n\n  const {\n    loading: loadingCategories,\n    error: errorCategories,\n    categories,\n  } = productCategoryList;\n  const {\n    loading: loadingFormRelease,\n    error: errorFormRelease,\n    formReleases,\n  } = productFormReleaseList;\n  const {\n    loading: loadingProviders,\n    error: errorProviders,\n    providers,\n  } = productProviderList;\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate,\n  } = productUpdate;\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(listProductCategories());\n    dispatch(listProductFormRelease());\n    dispatch(listProductProviders());\n    if (successUpdate) {\n      props.history.push(\"/productlist\");\n    }\n    if (!product || product._id !== productId || successUpdate) {\n      dispatch({ type: PRODUCT_UPDATE_RESET });\n      dispatch(detailsProducts(productId));\n    } else {\n      setName(product.name);\n      setPrice(product.price);\n      setImage(product.image);\n      setCategory(product.category);\n      setCountInStock(product.countInStock);\n      setProvider(product.provider);\n      setFormRelease(product.formRelease);\n      setDescription(product.description);\n      setPrescript(product.prescript);\n      setIsPrescripted(product.isPrescripted);\n\n    }\n  }, [product, dispatch, productId, successUpdate, props.history]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(\n      updateProduct({\n        _id: productId,\n        name,\n        price,\n        image,\n        category,\n        countInStock,\n        description,\n        provider,\n        formRelease,\n        isPrescripted,\n        prescript,\n      })\n    );\n  };\n\n  const [loadingUpload, setLoadingUpload] = useState(false);\n  const [errorUpload, setErrorUpload] = useState(\"\");\n\n  const userSignin = useSelector((state) => state.userSignin);\n  const { userInfo } = userSignin;\n  const uploadFileHandler = async (e) => {\n    const file = e.target.files[0];\n    const bodyFormData = new FormData();\n    bodyFormData.append(\"image\", file);\n    setLoadingUpload(true);\n    try {\n      const { data } = await Axios.post(\"/api/uploads\", bodyFormData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      });\n      setImage(data);\n      setLoadingUpload(false);\n    } catch (error) {\n      setErrorUpload(error.message);\n      setLoadingUpload(false);\n    }\n  };\n  const closeHandler = () => {\n    props.history.push(\"/productlist/\");\n    window.location.reload(false);\n  };\n\n  const handleIsPrescripted = () => {\n    console.log(\"Было:\" + isPrescripted);\n    setIsPrescripted(!isPrescripted);\n  };\n\n\n  const hashHandler = () => {\n    setPrescript(makeid(20));\n  };\n\n  function makeid(length) {\n    var result = \"\";\n    var characters =\n      \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n    var charactersLength = characters.length;\n    for (var i = 0; i < length; i++) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    console.log(result);\n    return result;\n  }\n\n  if(prescript == ''){\n    setPrescript(makeid(20));\n  }\n\n  return (\n    <div>\n      <form className=\"form\" onSubmit={submitHandler}>\n        <div>\n          <h1>Редактирование товара {productId}</h1>\n        </div>\n        {loadingUpdate && <LoadingBox></LoadingBox>}\n        {errorUpdate && <MessageBox variant=\"danger\">{errorUpdate}</MessageBox>}\n        {loading ? (\n          <LoadingBox></LoadingBox>\n        ) : error ? (\n          <MessageBox variant=\"danger\">{error}</MessageBox>\n        ) : (\n          <>\n            <div>\n              <label>\n                <input\n                  type=\"checkbox\"\n                  checked={isPrescripted}\n                  onChange={handleIsPrescripted}\n                />\n                Требуется рецепт?\n              </label>\n            </div>\n            <div style={{ display: isPrescripted ? \"flex\" : \"none\" }}>\n              <label>Хеш-рецепт для покупки данного препапата:</label>\n              <input\n                type=\"input\"\n                disabled=\"true\"\n                style={{ borderRadius: \"1rem 1rem 0 0\" }}\n                value={prescript}\n              />\n              <button\n                type=\"button\"\n                style={{ borderRadius: \"0 0 1rem 1rem\" }}\n                onClick={hashHandler}\n              >\n                Сгенерировать новый хеш-рецепт\n              </button>\n            </div>\n\n            <div>\n              <label htmlFor=\"name\">Наименование</label>\n              <input\n                id=\"name\"\n                type=\"text\"\n                placeholder=\"Введите наименование\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              ></input>\n            </div>\n            <div>\n              <label htmlFor=\"price\">Цена</label>\n              <input\n                id=\"price\"\n                type=\"text\"\n                placeholder=\"Введите цену\"\n                value={price}\n                onChange={(e) => setPrice(e.target.value)}\n              ></input>\n            </div>\n            <div>\n              <label htmlFor=\"image\">Изображение</label>\n              <input\n                id=\"image\"\n                type=\"text\"\n                placeholder=\"Выберите изображение\"\n                value={image}\n                onChange={(e) => setImage(e.target.value)}\n              ></input>\n            </div>\n            <div>\n              <label htmlFor=\"imageFile\">\n                Файл изображения (Соотношение сторон 1x1, png/jpg)\n              </label>\n              <input\n                type=\"file\"\n                id=\"imageFile\"\n                label=\"Выберите изображение\"\n                onChange={uploadFileHandler}\n              ></input>\n              {loadingUpload && <LoadingBox></LoadingBox>}\n              {errorUpload && (\n                <MessageBox variant=\"danger\">{errorUpload}</MessageBox>\n              )}\n            </div>\n            <div>\n              <label htmlFor=\"category\">Категория</label>\n              {loadingCategories ? (\n                <LoadingBox></LoadingBox>\n              ) : errorCategories ? (\n                <MessageBox variant=\"danger\">{errorCategories}</MessageBox>\n              ) : (\n                <select onChange={(e) => setCategory(e.target.value)}>\n                  {categories.map((c) => (\n                    <option value={c.name}>{c.name}</option>\n                  ))}\n                  <option selected value={category}>\n                    {category} - Выбрано\n                  </option>\n                </select>\n              )}\n            </div>\n            <div>\n              <label htmlFor=\"category\">Форма выпуска</label>\n              {loadingFormRelease ? (\n                <LoadingBox></LoadingBox>\n              ) : errorFormRelease ? (\n                <MessageBox variant=\"danger\">{errorFormRelease}</MessageBox>\n              ) : (\n                <select onChange={(e) => setFormRelease(e.target.value)}>\n                  {formReleases.map((c) => (\n                    <option value={c.name}>{c.name}</option>\n                  ))}\n                  <option selected value={formRelease}>\n                    {formRelease} - Выбрано\n                  </option>\n                </select>\n              )}\n            </div>\n            <div>\n              <label htmlFor=\"category\">Поставщик</label>\n              {loadingProviders ? (\n                <LoadingBox></LoadingBox>\n              ) : errorProviders ? (\n                <MessageBox variant=\"danger\">{errorProviders}</MessageBox>\n              ) : (\n                <select onChange={(e) => setProvider(e.target.value)}>\n                  {providers.map((c) => (\n                    <option value={c.name}>{c.name}</option>\n                  ))}\n                  <option selected value={provider}>\n                    {provider} - Выбрано\n                  </option>\n                </select>\n              )}\n            </div>\n\n            <div>\n              <label htmlFor=\"countInStock\">Кол-во в наличии</label>\n              <input\n                id=\"countInStock\"\n                type=\"text\"\n                placeholder=\"Введите кол-во\"\n                value={countInStock}\n                onChange={(e) => setCountInStock(e.target.value)}\n              ></input>\n            </div>\n            <div>\n              <label htmlFor=\"description\">Описание</label>\n              <textarea\n                id=\"description\"\n                rows=\"3\"\n                type=\"text\"\n                placeholder=\"Введите описание\"\n                value={description}\n                onChange={(e) => setDescription(e.target.value)}\n              ></textarea>\n            </div>\n            <div>\n              <label></label>\n              <button className=\"primary\" type=\"submit\">\n                Обновить\n              </button>\n            </div>\n          </>\n        )}\n        <div>\n          <label></label>\n          <button\n            className=\"shadow\"\n            style={{ width: \"16%\", margin: \"0 auto 2rem auto\" }}\n            onClick={closeHandler}\n          >\n            Отменить\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n","C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\screens\\ProductListScreen.js",[],[],"C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\screens\\OrderListScreen.js",["324"],[],"import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteOrder, listOrders } from '../actions/orderActions';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { ORDER_DELETE_RESET } from '../constants/orderConstants';\n\nexport default function OrderListScreen(props) {\n  const sellerMode = props.match.path.indexOf('/seller') >= 0;\n  const orderList = useSelector((state) => state.orderList);\n  const { loading, error, orders } = orderList;\n  const orderDelete = useSelector((state) => state.orderDelete);\n  const {\n    loading: loadingDelete,\n    error: errorDelete,\n    success: successDelete,\n  } = orderDelete;\n\n  const userSignin = useSelector((state) => state.userSignin);\n  const { userInfo } = userSignin;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch({ type: ORDER_DELETE_RESET });\n    dispatch(listOrders( '' ));\n  }, [dispatch, successDelete, userInfo._id]);\n  const deleteHandler = (order) => {\n    if (window.confirm('Вы уверены?')) {\n      dispatch(deleteOrder(order._id));\n    }\n  };\n  return (\n    <div className='tableDiv'>\n    <h1 className=\"row center\">Управление заказами</h1>\n      {loadingDelete && <LoadingBox></LoadingBox>}\n      {errorDelete && <MessageBox variant=\"danger\">{errorDelete}</MessageBox>}\n      {loading ? (\n        <LoadingBox></LoadingBox>\n      ) : error ? (\n        <MessageBox variant=\"danger\">{error}</MessageBox>\n      ) : (\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>Пользователь</th>\n              <th>Дата</th>\n              <th>Сумма</th>\n              <th>Статус оплаты</th>\n              <th>Статус доставки</th>\n              <th>Действия</th>\n            </tr>\n          </thead>\n          <tbody>\n            {orders.map((order) => (\n              <tr key={order._id}>\n                <td>{order._id}</td>\n                <td>{order.user.name}</td>\n                <td>{order.createdAt.substring(0, 10)}</td>\n                <td>{order.totalPrice.toFixed(2)}</td>\n                <td>{order.isPaid ? order.paidAt.substring(0, 10) : 'Нет'}</td>\n                <td>\n                  {order.isDelivered\n                    ? order.deliveredAt.substring(0, 10)\n                    : 'Нет'}\n                </td>\n                <td>\n                  <button\n                    type=\"button\"\n                    className=\"small\"\n                    onClick={() => {\n                      props.history.push(`/order/${order._id}`);\n                    }}\n                  >\n                    Детали\n                  </button>\n                  <button\n                    type=\"button\"\n                    className=\"small\"\n                    onClick={() => deleteHandler(order)}\n                  >\n                    Удалить\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      )}\n    </div>\n  );\n}","C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\screens\\UserListScreen.js",[],[],"C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\screens\\UserEditScreen.js",["325","326"],[],"import React from \"react\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { detailsUser, updateUser } from \"../actions/userActions\";\nimport LoadingBox from \"../components/LoadingBox\";\nimport MessageBox from \"../components/MessageBox\";\nimport { USER_UPDATE_RESET } from \"../constants/userConstants\";\n\nexport default function UserEditScreen(props) {\n  const userId = props.match.params.id;\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [isSeller, setIsSeller] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [canManageProducts, setCanManageProducts] = useState(false);\n  const [canManageOrders, setCanManageOrders] = useState(false);\n  const [canManageCategories, setCanManageCategories] = useState(false);\n  const [canManageFormReleases, setCanManageFormReleases] = useState(false);\n  const [canManageProviders, setCanManageProviders] = useState(false);\n  const [canManageSupport, setCanManageSupport] = useState(false);\n  const userDetails = useSelector((state) => state.userDetails);\n  const { loading, error, user } = userDetails;\n\n  const userUpdate = useSelector((state) => state.userUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate,\n  } = userUpdate;\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: USER_UPDATE_RESET });\n      if (user.isWorker) {\n        props.history.push(\"/workers\");\n      } else {\n        props.history.push(\"/userlist\");\n      }\n    }\n    if (!user) {\n      dispatch(detailsUser(userId));\n    } else {\n      setName(user.name);\n      setEmail(user.email);\n      setCanManageProducts(user.canManageProducts);\n      setCanManageFormReleases(user.canManageFormReleases);\n      setCanManageProviders(user.canManageProviders);\n      setCanManageSupport(user.canManageSupport);\n      setCanManageOrders(user.canManageOrders);\n      setCanManageCategories(user.canManageCategories);\n    }\n  }, [dispatch, props.history, successUpdate, user, userId]);\n\n  const canManageProductsHandler = () => {\n    console.log(\"Было:\" + canManageProducts);\n    setCanManageProducts(!canManageProducts);\n  };\n  const canManageFormReleasesHandler = () => {\n    console.log(\"Было:\" + canManageFormReleases);\n    setCanManageFormReleases(!canManageFormReleases);\n  };\n  const canManageOrdersHandler = () => {\n    console.log(\"Было:\" + canManageOrders);\n    setCanManageOrders(!canManageOrders);\n  };\n  const canManageCategoriesHandler = () => {\n    console.log(\"Было:\" + canManageCategories);\n    setCanManageCategories(!canManageCategories);\n  };\n  const canManageSupportHandler = () => {\n    console.log(\"Было:\" + canManageSupport);\n    setCanManageSupport(!canManageSupport);\n  };\n  const canManageProvidersHandler = () => {\n    console.log(\"Было:\" + canManageProviders);\n    setCanManageProviders(!canManageProviders);\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    // dispatch update user\n    dispatch(\n      updateUser({\n        _id: userId,\n        name,\n        email,\n        isSeller,\n        isAdmin,\n        canManageFormReleases,\n        canManageProducts,\n        canManageProviders,\n        canManageSupport,\n        canManageCategories,\n        canManageOrders,\n      })\n    );\n  };\n  return (\n    <div>\n      <form className=\"form\" onSubmit={submitHandler}>\n        <div>\n          <h1>Редактирование пользователя \"{name}\"</h1>\n          {loadingUpdate && <LoadingBox></LoadingBox>}\n          {errorUpdate && (\n            <MessageBox variant=\"danger\">{errorUpdate}</MessageBox>\n          )}\n        </div>\n        {loading ? (\n          <LoadingBox />\n        ) : error ? (\n          <MessageBox variant=\"danger\">{error}</MessageBox>\n        ) : (\n          <>\n            <div>\n              <label htmlFor=\"name\">Имя</label>\n              <input\n                id=\"name\"\n                type=\"text\"\n                placeholder=\"Введите имя\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              ></input>\n            </div>\n            <div>\n              <label htmlFor=\"email\">Email</label>\n              <input\n                id=\"email\"\n                type=\"email\"\n                placeholder=\"Введите email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              ></input>\n            </div>\n            {user.isWorker ? (\n              <div>\n                <label className=\"center\">\n                  Настройка прав доступа для сотрудников\n                </label>\n                <div style={{display:'contents', margin:'0 auto'}}>\n                  <label>\n                    <input\n                      type=\"checkbox\"\n                      checked={canManageProducts}\n                      onChange={canManageProductsHandler}\n                    />\n                    Может управлять товарами?\n                  </label>\n                  <label>\n                    <input\n                      type=\"checkbox\"\n                      checked={canManageOrders}\n                      onChange={canManageOrdersHandler}\n                    />\n                    Может управлять заказами?\n                  </label>\n                  <label>\n                    <input\n                      type=\"checkbox\"\n                      checked={canManageCategories}\n                      onChange={canManageCategoriesHandler}\n                    />\n                    Может управлять категориями?\n                  </label>\n                  <label>\n                    <input\n                      type=\"checkbox\"\n                      checked={canManageFormReleases}\n                      onChange={canManageFormReleasesHandler}\n                    />\n                    Может управлять формами выпуска?\n                  </label>\n                  <label>\n                    <input\n                      type=\"checkbox\"\n                      checked={canManageProviders}\n                      onChange={canManageProvidersHandler}\n                    />\n                    Может управлять поставщиками?\n                  </label>\n                  <label>\n                    <input\n                      type=\"checkbox\"\n                      checked={canManageSupport}\n                      onChange={canManageSupportHandler}\n                    />\n                    Может использовать обратную связь с клиентами?\n                  </label>\n                </div>\n              </div>\n            ) : (\n              \"\"\n            )}\n            <div>\n              <button type=\"submit\" className=\"primary\">\n                Обновить\n              </button>\n            </div>\n          </>\n        )}\n      </form>\n    </div>\n  );\n}\n","C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\screens\\ProviderScreen.js",[],[],"C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\screens\\MapScreen.js",[],[],"C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\screens\\SearchScreen.js",[],[],"C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\screens\\RegisterWorkerScreen.js",["327","328"],[],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { register, workerRegister } from \"../actions/userActions\";\nimport LoadingBox from \"../components/LoadingBox\";\nimport MessageBox from \"../components/MessageBox\";\n\nexport default function RegisterWorkerScreen(props) {\n  const [email, setEmail] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n\n  const { search } = useLocation();\n  const redirectInUrl = new URLSearchParams(search).get(\"redirect\");\n  const redirect = redirectInUrl ? redirectInUrl : \"/\";\n\n  const dispatch = useDispatch();\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      alert(\"Пароли не совпадают\");\n    } else {\n      dispatch(workerRegister(name, email, password, isWorker));\n      props.history.push('/workers');\n    }\n  };\n\n  const isWorker = true;\n  const userRegister = useSelector((state) => state.userRegister);\n  const { userInfo, loading, error } = userRegister;\n\n  useEffect(() => {\n    if (userInfo) {\n      props.history.push(redirect);\n    }\n  }, [props.history, redirect, userInfo]);\n\n  return (\n    <div>\n      <form className=\"form\" onSubmit={submitHandler}>\n        <div>\n          <h1>Регистрация нового сотрудника</h1>\n        </div>\n        {loading && <LoadingBox></LoadingBox>}\n        {error && <MessageBox variant=\"danger\">{error}</MessageBox>}\n        <div>\n          <label htmlFor=\"email\">Email</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            placeholder=\"Введите адрес эл. почты сотрудника\"\n            required\n            onChange={(e) => setEmail(e.target.value)}\n          ></input>\n        </div>\n        <div>\n          <label htmlFor=\"name\">ФИО</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            placeholder=\"Введите ФИО сотрудника\"\n            required\n            onChange={(e) => setName(e.target.value)}\n          ></input>\n        </div>\n        <div>\n          <label htmlFor=\"password\">Пароль</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            placeholder=\"Введите пароль сотрудника\"\n            required\n            onChange={(e) => setPassword(e.target.value)}\n          ></input>\n        </div>\n        <div>\n          <label htmlFor=\"confirmPassword\">Пароль</label>\n          <input\n            type=\"password\"\n            id=\"confirmPassword\"\n            placeholder=\"Введите пароль ещё раз\"\n            required\n            onChange={(e) => setConfirmPassword(e.target.value)}\n          ></input>\n        </div>\n        <div>\n          <label />\n          <button className=\"primary\" type=\"submit\">\n            Создать аккаунт сотрудника\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n","C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\screens\\WorkersScreen.js",[],[],"C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\screens\\FormReleaseScreen.js",[],[],"C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\screens\\ProvidersScreen.js",[],[],"C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\screens\\CategoryScreen.js",[],[],"C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\screens\\ProvidersEditScreen.js",[],[],"C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\screens\\FormReleaseEditScreen.js",[],[],"C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\screens\\SupportScreen.js",["329"],[],"import React, { useEffect, useRef, useState } from 'react';\nimport socketIOClient from 'socket.io-client';\nimport { useSelector } from 'react-redux';\nimport MessageBox from '../components/MessageBox';\n\nlet allUsers = [];\nlet allMessages = [];\nlet allSelectedUser = {};\nconst ENDPOINT =\n  window.location.host.indexOf('localhost') >= 0\n    ? 'http://127.0.0.1:5000'\n    : window.location.host;\n\nexport default function SupportScreen() {\n  const [selectedUser, setSelectedUser] = useState({});\n  const [socket, setSocket] = useState(null);\n  const uiMessagesRef = useRef(null);\n  const [messageBody, setMessageBody] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [users, setUsers] = useState([]);\n  const userSignin = useSelector((state) => state.userSignin);\n  const { userInfo } = userSignin;\n\n  useEffect(() => {\n    if (uiMessagesRef.current) {\n      uiMessagesRef.current.scrollBy({\n        top: uiMessagesRef.current.clientHeight,\n        left: 0,\n        behavior: 'smooth',\n      });\n    }\n\n    if (!socket) {\n      const sk = socketIOClient(ENDPOINT);\n      setSocket(sk);\n      sk.emit('onLogin', {\n        _id: userInfo._id,\n        name: userInfo.name,\n        isAdmin: userInfo.isAdmin,\n        isWorker: userInfo.isWorker,\n      });\n      sk.on('message', (data) => {\n        if (allSelectedUser._id === data._id) {\n          allMessages = [...allMessages, data];\n        } else {\n          const existUser = allUsers.find((user) => user._id === data._id);\n          if (existUser) {\n            allUsers = allUsers.map((user) =>\n              user._id === existUser._id ? { ...user, unread: true } : user\n            );\n            setUsers(allUsers);\n          }\n        }\n        setMessages(allMessages);\n      });\n      sk.on('updateUser', (updatedUser) => {\n        const existUser = allUsers.find((user) => user._id === updatedUser._id);\n        if (existUser) {\n          allUsers = allUsers.map((user) =>\n            user._id === existUser._id ? updatedUser : user\n          );\n          setUsers(allUsers);\n        } else {\n          allUsers = [...allUsers, updatedUser];\n          setUsers(allUsers);\n        }\n      });\n      sk.on('listUsers', (updatedUsers) => {\n        allUsers = updatedUsers;\n        setUsers(allUsers);\n      });\n      sk.on('selectUser', (user) => {\n        allMessages = user.messages;\n        setMessages(allMessages);\n      });\n    }\n  }, [messages, socket, users]);\n\n  const selectUser = (user) => {\n    allSelectedUser = user;\n    setSelectedUser(allSelectedUser);\n    const existUser = allUsers.find((x) => x._id === user._id);\n    if (existUser) {\n      allUsers = allUsers.map((x) =>\n        x._id === existUser._id ? { ...x, unread: false } : x\n      );\n      setUsers(allUsers);\n    }\n    socket.emit('onUserSelected', user);\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    if (!messageBody.trim()) {\n      alert('Ошибка. Введите сообщение.');\n    } else {\n      allMessages = [\n        ...allMessages,\n        { body: messageBody, name: userInfo.name },\n      ];\n      setMessages(allMessages);\n      setMessageBody('');\n      setTimeout(() => {\n        socket.emit('onMessage', {\n          body: messageBody,\n          name: userInfo.name,\n          isAdmin: userInfo.isAdmin,\n          isWorker: userInfo.isWorker,\n          _id: selectedUser._id,\n        });\n      }, 1000);\n    }\n  };\n\n  return (\n    <div className=\"row top full-container\">\n      <div className=\"col-1 support-users\">\n        {users.filter((x) => x._id !== userInfo._id).length === 0 && (\n          <MessageBox>Не найдено пользователей в сети.</MessageBox>\n        )}\n        <ul>\n          {users\n            .filter((x) => x._id !== userInfo._id)\n            .map((user) => (\n              <li\n                key={user._id}\n                className={user._id === selectedUser._id ? '  selected' : '  '}\n              >\n                <button\n                  className=\"block\"\n                  type=\"button\"\n                  onClick={() => selectUser(user)}\n                >\n                  {user.name}\n                </button>\n                <span\n                  className={\n                    user.unread ? 'не прочитано' : user.online ? 'онлайн' : 'не в сети'\n                  }\n                />\n              </li>\n            ))}\n        </ul>\n      </div>\n      <div className=\"col-3 support-messages\">\n        {!selectedUser._id ? (\n          <MessageBox>Выберите пользователя, чтобы начать чат.</MessageBox>\n        ) : (\n          <div>\n            <div className=\"row\">\n              <strong>Открыт диалог с {selectedUser.name} </strong>\n            </div>\n            <ul ref={uiMessagesRef}>\n              {messages.length === 0 && <li>Нет сообщений.</li>}\n              {messages.map((msg, index) => (\n                <li style={{breakWork:'break-word'}} key={index}>\n                  <strong>{`${msg.name}: `}</strong> {msg.body}\n                </li>\n              ))}\n            </ul>\n            <div>\n              <form onSubmit={submitHandler} className=\"row\">\n                <input\n                  value={messageBody}\n                  onChange={(e) => setMessageBody(e.target.value)}\n                  type=\"text\"\n                  placeholder=\"введите сообщение\"\n                />\n                <button type=\"submit\">Отправить</button>\n              </form>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}","C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\screens\\CategoryEditScreen.js",[],[],"C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\components\\PrivateRoute.js",[],[],"C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\screens\\DashboardScreen.js",[],[],"C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\components\\AdminRoute.js",[],[],"C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\components\\WorkerRoute.js",[],[],"C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\components\\SearchBox.js",[],[],"C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\components\\ChatBox.js",["330"],[],"import React, { useEffect, useRef, useState } from 'react';\nimport socketIOClient from 'socket.io-client';\n\nconst ENDPOINT =\n  window.location.host.indexOf('localhost') >= 0\n    ? 'http://127.0.0.1:5000'\n    : window.location.host;\n\nexport default function ChatBox(props) {\n  const { userInfo } = props;\n  const [socket, setSocket] = useState(null);\n  const uiMessagesRef = useRef(null);\n  const [isOpen, setIsOpen] = useState(false);\n  const [messageBody, setMessageBody] = useState('');\n  const [messages, setMessages] = useState([\n    { name: 'Администрация', body: 'Привет, мы на связи! Задавайте вопросы.' },\n  ]);\n\n  useEffect(() => {\n    if (uiMessagesRef.current) {\n      uiMessagesRef.current.scrollBy({\n        top: uiMessagesRef.current.clientHeight,\n        left: 0,\n        behavior: 'smooth',\n      });\n    }\n    if (socket) {\n      socket.emit('onLogin', {\n        _id: userInfo._id,\n        name: userInfo.name,\n        isAdmin: userInfo.isAdmin,\n      });\n      socket.on('message', (data) => {\n        setMessages([...messages, { body: data.body, name: data.name }]);\n      });\n    }\n  }, [messages, isOpen, socket]);\n\n  const supportHandler = () => {\n    setIsOpen(true);\n    console.log(ENDPOINT);\n    const sk = socketIOClient(ENDPOINT);\n    setSocket(sk);\n  };\n  const submitHandler = (e) => {\n    e.preventDefault();\n    if (!messageBody.trim()) {\n      alert('Ошибка. Пожалуйста введите сообщение.');\n    } else {\n      setMessages([...messages, { body: messageBody, name: userInfo.name }]);\n      setMessageBody('');\n      setTimeout(() => {\n        socket.emit('onMessage', {\n          body: messageBody,\n          name: userInfo.name,\n          isAdmin: userInfo.isAdmin,\n          _id: userInfo._id,\n        });\n      }, 1000);\n    }\n  };\n  const closeHandler = () => {\n    setIsOpen(false);\n  };\n  return (\n    <div className=\"chatbox\">\n      {!isOpen ? (\n        <button type=\"button\" onClick={supportHandler}>\n          <i className=\"fa fa-support\" />\n        </button>\n      ) : (\n        <div className=\"card card-body shadow\" style={{backgroundColor:'white'}}>\n          <div className=\"row\">\n            <strong>Поддержка </strong>\n            <button type=\"button\" onClick={closeHandler}>\n              <i className=\"fa fa-close\" />\n            </button>\n          </div>\n          <ul ref={uiMessagesRef}>\n            {messages.map((msg, index) => (\n              <li key={index}>\n                <strong>{`${msg.name}: `}</strong> {msg.body}\n              </li>\n            ))}\n          </ul>\n          <div>\n            <form onSubmit={submitHandler} className=\"row\">\n              <input\n                value={messageBody}\n                onChange={(e) => setMessageBody(e.target.value)}\n                type=\"text\"\n                placeholder=\"введите сообщение\"\n              />\n              <button type=\"submit\">Отправить</button>\n            </form>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}","C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\components\\CartItem.js",[],[],"C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\constants\\orderConstants.js",[],[],"C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\constants\\userConstants.js",[],[],"C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\components\\CheckoutSteps.js",[],[],"C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\actions\\orderActions.js",[],[],"C:\\Users\\aloob\\Desktop\\pharmacy-site\\frontend\\src\\utils.js",[],[],{"ruleId":"331","severity":1,"message":"332","line":43,"column":24,"nodeType":"333","messageId":"334","endLine":43,"endColumn":26},{"ruleId":"331","severity":1,"message":"332","line":46,"column":26,"nodeType":"333","messageId":"334","endLine":46,"endColumn":28},{"ruleId":"335","severity":1,"message":"336","line":10,"column":10,"nodeType":"337","messageId":"338","endLine":10,"endColumn":26},{"ruleId":"335","severity":1,"message":"339","line":11,"column":10,"nodeType":"337","messageId":"338","endLine":11,"endColumn":14},{"ruleId":"340","severity":1,"message":"341","line":29,"column":15,"nodeType":"342","endLine":31,"endColumn":17},{"ruleId":"340","severity":1,"message":"341","line":34,"column":15,"nodeType":"342","endLine":36,"endColumn":17},{"ruleId":"340","severity":1,"message":"341","line":39,"column":15,"nodeType":"342","endLine":41,"endColumn":17},{"ruleId":"335","severity":1,"message":"343","line":196,"column":13,"nodeType":"337","messageId":"338","endLine":196,"endColumn":17},{"ruleId":"335","severity":1,"message":"343","line":215,"column":13,"nodeType":"337","messageId":"338","endLine":215,"endColumn":17},{"ruleId":"335","severity":1,"message":"343","line":293,"column":13,"nodeType":"337","messageId":"338","endLine":293,"endColumn":17},{"ruleId":"335","severity":1,"message":"343","line":371,"column":13,"nodeType":"337","messageId":"338","endLine":371,"endColumn":17},{"ruleId":"335","severity":1,"message":"344","line":40,"column":9,"nodeType":"337","messageId":"338","endLine":40,"endColumn":16},{"ruleId":"335","severity":1,"message":"345","line":27,"column":10,"nodeType":"337","messageId":"338","endLine":27,"endColumn":25},{"ruleId":"335","severity":1,"message":"346","line":27,"column":27,"nodeType":"337","messageId":"338","endLine":27,"endColumn":45},{"ruleId":"331","severity":1,"message":"332","line":155,"column":16,"nodeType":"333","messageId":"334","endLine":155,"endColumn":18},{"ruleId":"335","severity":1,"message":"347","line":9,"column":9,"nodeType":"337","messageId":"338","endLine":9,"endColumn":19},{"ruleId":"335","severity":1,"message":"348","line":14,"column":20,"nodeType":"337","messageId":"338","endLine":14,"endColumn":31},{"ruleId":"335","severity":1,"message":"349","line":15,"column":19,"nodeType":"337","messageId":"338","endLine":15,"endColumn":29},{"ruleId":"335","severity":1,"message":"339","line":3,"column":10,"nodeType":"337","messageId":"338","endLine":3,"endColumn":14},{"ruleId":"335","severity":1,"message":"350","line":4,"column":10,"nodeType":"337","messageId":"338","endLine":4,"endColumn":18},{"ruleId":"351","severity":1,"message":"352","line":77,"column":6,"nodeType":"353","endLine":77,"endColumn":31,"suggestions":"354"},{"ruleId":"351","severity":1,"message":"355","line":37,"column":6,"nodeType":"353","endLine":37,"endColumn":32,"suggestions":"356"},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'listTopProviders' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'data' is assigned a value but never used.","'toPrice' is assigned a value but never used.","'prescriptVision' is assigned a value but never used.","'setPrescriptVision' is assigned a value but never used.","'sellerMode' is assigned a value but never used.","'setIsSeller' is assigned a value but never used.","'setIsAdmin' is assigned a value but never used.","'register' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'userInfo._id', 'userInfo.isAdmin', 'userInfo.isWorker', and 'userInfo.name'. Either include them or remove the dependency array.","ArrayExpression",["357"],"React Hook useEffect has missing dependencies: 'userInfo._id', 'userInfo.isAdmin', and 'userInfo.name'. Either include them or remove the dependency array.",["358"],{"desc":"359","fix":"360"},{"desc":"361","fix":"362"},"Update the dependencies array to be: [messages, socket, userInfo._id, userInfo.isAdmin, userInfo.isWorker, userInfo.name, users]",{"range":"363","text":"364"},"Update the dependencies array to be: [messages, isOpen, socket, userInfo._id, userInfo.name, userInfo.isAdmin]",{"range":"365","text":"366"},[2416,2441],"[messages, socket, userInfo._id, userInfo.isAdmin, userInfo.isWorker, userInfo.name, users]",[1107,1133],"[messages, isOpen, socket, userInfo._id, userInfo.name, userInfo.isAdmin]"]