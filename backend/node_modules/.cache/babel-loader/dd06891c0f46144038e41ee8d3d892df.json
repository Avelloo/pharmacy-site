{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aloob\\\\Desktop\\\\pharmacy-site\\\\frontend\\\\src\\\\screens\\\\HomeScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Product from \"../components/Product\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function HomeScreen() {\n  _s();\n\n  const [product, setProducts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n\n      try {\n        const {\n          data\n        } = await axios.get('/api/products');\n      } catch (err) {\n        setError(err.message);\n        setLoading(false);\n      }\n\n      setLoading(false);\n      setProducts(data);\n    };\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loading ? /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 20\n    }, this) : error ? /*#__PURE__*/_jsxDEV(MessageBox, {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row center\",\n      children: product.map(product => /*#__PURE__*/_jsxDEV(Product, {\n        product: product\n      }, product._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n\n_s(HomeScreen, \"PlSXGFbaSRKAKciN9vGTrgcyDO4=\");\n\n_c = HomeScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomeScreen\");","map":{"version":3,"sources":["C:/Users/aloob/Desktop/pharmacy-site/frontend/src/screens/HomeScreen.js"],"names":["React","useEffect","useState","axios","Product","HomeScreen","product","setProducts","loading","setLoading","error","setError","fetchData","data","get","err","message","map","_id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,uBAApB;;AAEA,eAAe,SAASC,UAAT,GAAsB;AAAA;;AAEjC,QAAM,CAACC,OAAD,EAAUC,WAAV,IAAyBL,QAAQ,CAAC,EAAD,CAAvC;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,KAAD,CAAlC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMW,SAAS,GAAG,YAAY;AAC1BH,MAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,UAAG;AACC,cAAM;AAAEI,UAAAA;AAAF,YAAW,MAAMV,KAAK,CAACW,GAAN,CAAU,eAAV,CAAvB;AACH,OAFD,CAEE,OAAMC,GAAN,EAAU;AACRJ,QAAAA,QAAQ,CAACI,GAAG,CAACC,OAAL,CAAR;AACAP,QAAAA,UAAU,CAAC,KAAD,CAAV;AACH;;AACDA,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAF,MAAAA,WAAW,CAACM,IAAD,CAAX;AACH,KAVD;;AAWAD,IAAAA,SAAS;AACZ,GAbQ,EAaN,EAbM,CAAT;AAeA,sBACI;AAAA,cACCJ,OAAO,gBAAG,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YAAH,GAERE,KAAK,gBAAG,QAAC,UAAD;AAAA,gBAAaA;AAAb;AAAA;AAAA;AAAA;AAAA,YAAH,gBAEL;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,gBAEYJ,OAAO,CAACW,GAAR,CAAYX,OAAO,iBACf,QAAC,OAAD;AAA2B,QAAA,OAAO,EAAEA;AAApC,SAAcA,OAAO,CAACY,GAAtB;AAAA;AAAA;AAAA;AAAA,cADJ;AAFZ;AAAA;AAAA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH;;GArCuBb,U;;KAAAA,U","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport Product from \"../components/Product\";\r\n\r\nexport default function HomeScreen() {\r\n\r\n    const [product, setProducts] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(false);\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            setLoading(true);\r\n            try{\r\n                const { data } = await axios.get('/api/products');\r\n            } catch(err){\r\n                setError(err.message);\r\n                setLoading(false);\r\n            }\r\n            setLoading(false);\r\n            setProducts(data);\r\n        };\r\n        fetchData();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n        {loading ? <LoadingBox></LoadingBox>\r\n        : \r\n        error ? <MessageBox>{error}</MessageBox>\r\n        :\r\n        <div className=\"row center\">\r\n                {\r\n                    product.map(product => (\r\n                        <Product key={product._id} product={product}></Product>\r\n                    ))\r\n                }\r\n\r\n            </div>}\r\n            \r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}