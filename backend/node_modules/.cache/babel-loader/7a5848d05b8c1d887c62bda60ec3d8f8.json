{"ast":null,"code":"export const cartReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    cartItems: []\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      const item = action.payload;\n      const existItem = state.cartItems.find(x => x.product === item.product);\n\n      if (existItem) {\n        return { ...state,\n          cartItems: state.cartItems.map(x => x.product === existItem.product ? item : x)\n        };\n      } else {\n        return { ...state,\n          cartItems: [...state.cartItems, item]\n        };\n      }\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/aloob/Desktop/pharmacy-site/frontend/src/reducers/cartReducers.js"],"names":["cartReducer","state","cartItems","action","type","CART_ADD_ITEM","item","payload","existItem","find","x","product","map"],"mappings":"AAAA,OAAO,MAAMA,WAAW,GAAG,YAAuC;AAAA,MAAtCC,KAAsC,uEAA9B;AAAEC,IAAAA,SAAS,EAAE;AAAb,GAA8B;AAAA,MAAXC,MAAW;;AAC9D,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKC,aAAL;AACI,YAAMC,IAAI,GAAGH,MAAM,CAACI,OAApB;AACA,YAAMC,SAAS,GAAGP,KAAK,CAACC,SAAN,CAAgBO,IAAhB,CAAqBC,CAAC,IAAIA,CAAC,CAACC,OAAF,KAAcL,IAAI,CAACK,OAA7C,CAAlB;;AACA,UAAIH,SAAJ,EAAe;AACX,eAAO,EACH,GAAGP,KADA;AAEHC,UAAAA,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBU,GAAhB,CAAoBF,CAAC,IAAIA,CAAC,CAACC,OAAF,KAAcH,SAAS,CAACG,OAAxB,GAAkCL,IAAlC,GAAyCI,CAAlE;AAFR,SAAP;AAIH,OALD,MAMI;AACA,eAAO,EAAC,GAAGT,KAAJ;AACPC,UAAAA,SAAS,EAAC,CAAC,GAAGD,KAAK,CAACC,SAAV,EAAqBI,IAArB;AADH,SAAP;AAEH;;AACL;AACI,aAAOL,KAAP;AAfR;AAiBH,CAlBM","sourcesContent":["export const cartReducer = (state = { cartItems: [] }, action) => {\r\n    switch (action.type) {\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload;\r\n            const existItem = state.cartItems.find(x => x.product === item.product);\r\n            if (existItem) {\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(x => x.product === existItem.product ? item : x)\r\n                }\r\n            }\r\n            else{\r\n                return {...state,\r\n                cartItems:[...state.cartItems, item]}\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}